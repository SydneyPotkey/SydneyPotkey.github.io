{
  "hash": "240a1f8286a7fa433cc23ec658094fbc",
  "result": {
    "engine": "knitr",
    "markdown": "Download the source code for the template here:\n\n[`reflection-template.qmd`](https://raw.githubusercontent.com/atheobold/stat-541-website/refs/heads/main/portfolio/reflection-template.qmd \"download\")\n\n\n\n# Independent Learning (IL):\n\n*These objectives show your ability to seek out new information and adapt to new tools to solve data analysis problems.*\n\n## \\[IL-1\\] Adding new skills:\n\n-   I can find and adopt new packages to accomplish tasks.\n-   I can adapt to different syntax styles (tidy, base, formula style, data.table).\n\n\n\n### Level: 3\n\n### Justification:\n\nLab 2 Enhanced visualization #1. In this graph I used the ggiraph package to add an interactive element to my scatter plot. \n\n## \\[IL-2\\] Online resources:\n\n-   I can use online resources (e.g., Google, ChatGPT, StackOverflow, YouTube) to solve problems, debug, or find new tools.\n-   I can use tutorials, etc. to enhance my understanding of new concepts.\n-   I can find source code for similar projects to use as starting points for my own.\n\n\n\n### Level: 3\n\n### Justification:\n\nLab 2 Fixing bad Visualizations, Graph 2. Here I used chat gpt to help me figure out how to access the natural earth hires packge from git hub, something that I had never done before. \n\nLab 4 Interactive Dashboards. I had never used shiny before, so I used multiple youtube tutorials, as well as the provided source code to guide my project.\n\n## IL Summary\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm_template_files/figure-html/IL-summary-graph-1.png){width=672}\n:::\n:::\n\n\n# Reproducible Workflow (RW):\n\n*These objectives show your ability to produce artifacts and deliverables that are organized, documented, version tracked, and responsibly designed.*\n\n## \\[RW-1\\] File, code, and data management:\n\n-   I can use Git and GitHub to track my progress (creating repos, cloning, forking, pull requesting).\n-   I always use R Projects and the {here} package to organize my scripts, notebooks, data, and applications.\n-   I always use pull requests when collaborating with others.\n\n\n\n### Level: 1\n\n### Justification:\n\nI have not done the best thus far at committing regularly, but am making an effort now to commit more often! This is an area I could definitley improve in for my final portfolio. \n\n## \\[RW-2\\] Notebooks:\n\n-   I can use Quarto to produce a reproducible notebook and polished rendered documents\n-   I can use appropriate chunk options (echo, error, cache, etc.) to render my Quarto document quickly and cleanly.\n\n\n\n### Level: 2\n\n### Justification: \nLab 1 Quarto intro. I use code chunk options such as echo and eval to produce a cleaner looking html. I also make sure to use the label code chunk option consistently for organization. Along with this I use a theme for a more visually appealing document.\n\n\n## \\[RW-3\\] Code style\n\n-   My code is clear, readable, well-organized, and well-commented.\n\n\n\n### Level: 2\n\n### Justification\n\nLab 2 Fixing Bad Visualizations. The best example of this is filtering the code used for my visualizations. Here well commented code was necessary for clarity. I could improve my consistency in this are as my code is not always this well organized. \n\n## RW Summary\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm_template_files/figure-html/RW-summary-graph-1.png){width=672}\n:::\n:::\n\n\n# Technical Communication (TC):\n\n*These objectives show your ability to communicate the processes you have implemented in your code, as well as the data conclusions and results.*\n\n## \\[TC-1\\] Project summaries:\n\n-   I can create clear and succinct summaries of a project.\n-   I accurately interpret statistical or modeling results.\n-   I consider the appropriate scope and impact of my project results.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## \\[TC-2\\] Documentation:\n\n-   I can create a user-friendly dashboard.\n-   I provide ample documentation for my custom functions.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## TC Summary\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm_template_files/figure-html/TC-summary-graph-1.png){width=672}\n:::\n:::\n\n\n# Data Manipulation (DM):\n\n*These objectives relate to the collection, cleaning, processing, and preparing of datasets for analysis.*\n\n## \\[DM-1\\] Data Preparation\n\n-   I can read in datasets to R, including untidy ones.\n-   I can clean datasets to deal with missing data, typos, poor formatting, etc.\n\n\n\n### Level: 3\n\n### Justification:\n\nThe best example of this is the world data from lab 2. I read in the excel files, wrangled the data into a few different data sets that worked best for specific graphs. Then I wrote them into csv files to be used for Labs 3 and 4.\n\n## \\[DM-2\\] Data Wrangling\n\n-   I can cleverly use pivoting, separating, grouping, and joining to wrangle data.\n-   I can use mapping (`purrr`) to perform repeated tasks.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## \\[DM-3\\] Data Formats\n\n-   I can use API urls to access JSON data and convert it into a data frame\n-   I can scrape data from the web and convert it into a data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Fill in the line below with your self-assigned level for this objective.\nmy_level <- 1\n\nportfolio_levels <- portfolio_levels %>%\n  bind_rows(tibble(Objective = \"DM-3\", \n                   Level = my_level))\n```\n:::\n\n\n### Level: 1\n\n### Justification\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## DM Summary\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm_template_files/figure-html/DM-summary-graph-1.png){width=672}\n:::\n:::\n\n\n# Professional Visualization (PV):\n\n## \\[PV-1\\] Clear & Accessible Visualizations\n\n-   I can make my plots more clear by removing the legend and adding annotations.\n-   I can edit the titles, subtitles, captions, axis labels, etc. to create a clearly labelled plot.\n-   I can choose colors (\"scales\") and themes to make a visually pleasing and accessible plot.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## \\[PV-2\\] Dynamic Visualizations\n\n-   I can use a package like {gganimate} to create self-contained gifs.\n-   I can use a package like {plotly}, {ggplotly}, {leaflet}, {ggirafe}, etc. to make interactive html widgets.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## \\[PV-3\\] Interactive Visualizations\n\n-   I can use Shiny or webR to create visualizations that react to a user's input.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## PV Summary\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm_template_files/figure-html/PV-summary-graph-1.png){width=672}\n:::\n:::\n\n\n# Code Design, Algorithms, Iteration (CDAI):\n\n*These objectives ask you to design code-based approaches to statistical computing problems, usually involving iteration to a stopping condition.*\n\n## \\[CDAI-1\\] R Programming Language\n\n-   I understand non-standard evaluation (aka \"tidy eval\" or \"unquoted objects\"), and I can use tunneling in my functions.\n-   I understand functional programming, and I can use functions as objects in my code design.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## \\[CDAI-2\\] Object Handling\n\n-   I have built in checks for possible input problems\n-   I can make reasonable choices in my code design about when to save intermediate objects.\n-   I can convert objects between types and structures as needed.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## \\[CDAI-3\\] Speed and Efficiency\n\n-   I can recognize moments of possible slowdown in my code, and use built-in functions or parallelizing to speed them up.\n-   I always use and design vectorized functions whenever possible.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## \\[CDAI-4\\] Supporting Functions\n\n-   I write helper / shortcut functions to streamline repeated tasks and make my code easier to read.\n-   I use intermediate functions to streamline repeated or looping processes.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## \\[CDAI-5\\] Algorithmic Process\n\n-   I can invent and implement my own iterative algorithm.\n-   My loops are clean and efficient.\n-   I have built in checks for possible problems or extreme cases in the algorithm.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## \\[CDAI-6\\] Generative Art\n\n-   I can apply a variety of generative art functions to make a visually pleasing piece.\n-   I can explain why particular changes to the code result in particular differences in the visualization.\n\n\n\n### Level: 1\n\n### Justification:\n\n<!-- Insert references to the work shown in the blog(s) on your personal website -->\n\n## CDAI Summary\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm_template_files/figure-html/CDAI-summary-graph-1.png){width=672}\n:::\n:::\n\n\n# Overall Summary\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](midterm_template_files/figure-html/overall-summary-graph-1.png){width=672}\n:::\n:::\n\n\n## Grade\n\nBased on the summary plot above, I believe I have earned a \\_\\_\\_\\_ in STAT 541.\n\n### Justification\n",
    "supporting": [
      "midterm_template_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}